package com.usuario.service.servicio;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.web.client.RestTemplate;

import com.usuario.service.entidades.Usuario;
import com.usuario.service.feignclientes.CarroFeignClient;
import com.usuario.service.feignclientes.MotoFeignClient;
import com.usuario.service.modelo.Carro;
import com.usuario.service.modelo.Moto;
import com.usuario.service.repositorio.UsuarioRepository;

@Service
public class UsuarioService {

	@Autowired
	private RestTemplate restTemplate;

	@Autowired
	private CarroFeignClient carroFeignClient;

	@Autowired
	private MotoFeignClient motoFeignClient;

	@Autowired
	private UsuarioRepository usuarioRepository;

	public Carro saveCarro(int usuarioId, Carro carro) {

		carro.setUsuarioId(usuarioId);

		Carro nuevoCarro = carroFeignClient.save(carro);

		return nuevoCarro;
	}

	public Moto saveMoto(int usuarioId, Moto moto) {

		moto.setUsuarioId(usuarioId);

		Moto nuevoMoto = motoFeignClient.save(moto);

		return nuevoMoto;
	}

	public List<Usuario> getAll() {
		return usuarioRepository.findAll();
	}

	public Map<String, Object> getUsuarioAndVehiculos(int usuarioId) {

		Map<String, Object> resultado = new HashMap<String, Object>();

		Usuario usuario = usuarioRepository.findById(usuarioId).orElse(null);

		if (usuario == null) {
			resultado.put("Mensaje", "Usuario no existe.");

		} else {
			resultado.put("Usuario", usuario);
			List<Carro> carros = carroFeignClient.getCarros(usuarioId);
			if (carros.isEmpty()) 
				resultado.put("Carros", "El usuario no tiene carros.");
			 else
				resultado.put("Carros", carros);
		}

		return resultado;
	}

	public Usuario getUsuarioById(int id) {
		return usuarioRepository.findById(id).orElse(null);
	}

	public Usuario save(Usuario usuario) {
		Usuario nuevoUsuario = usuarioRepository.save(usuario);
		return nuevoUsuario;
	}

	public List<Carro> getCarros(int usuarioId) {
		List<Carro> carros = restTemplate.getForObject("http://localhost:8082/carro/usuario/" + usuarioId, List.class);
		return carros;
	}

	public List<Moto> getMotos(int usuarioId) {
		List<Moto> motos = restTemplate.getForObject("http://localhost:8083/moto/usuario/" + usuarioId, List.class);
		return motos;
	}
}
